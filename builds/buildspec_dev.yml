############################
#Accomplishes the following build tasks
#
#1) Runs the cloudformation template to create the necessary resources
#2) Runs python coverage function to generate Auto HTML documentation
##) Runs unit tests of lambda functions, checks aws resources created
#
#
############################
version: 0.2

# env:
  # variables:
  #   JAVA_HOME: "/usr/lib/jvm/java-8-openjdk-amd64"
  # parameter-store:
  #   LOGIN_PASSWORD: /CodeBuild/dockerLoginPassword

phases:
  ###########################################
  #Uses a python runtime
  #Note that you do not need the \ to escape
  #aws cli commands
  ###########################################
  install:
    runtime-versions:
       python: 3.7
    commands:
      - echo Entered the install phase...

      - git status
      - git branch

      - pip install -r tests/requirements.txt
      - ls -l
    finally:
      - echo This always runs even if the update or install command fails
  # pre_build:
  #   commands:
  #     - echo Entered the pre_build phase...
  #     - docker login –u User –p $LOGIN_PASSWORD
  #   finally:
  #     - echo This always runs even if the login command fails
  #
  #Builds the cloudformation stack that contains the
  #static webpage
  build:
    commands:
      - echo Entered the build phase...
      - echo Build started on `date`

      #Will not return until the stack create is complete
      - aws cloudformation create-stack --stack-name dev-sneakpeek-webpage
       --template-body file://templates/static_webpage.yml
       --parameters  file://util/dev_config.json
       --capabilities CAPABILITY_NAMED_IAM

      #Runs the backend cloudformation template to create the
      #dynamodb table, api gateway, lambda function for dynamic
      #content
      #capabilities =
      #Ability to create iam roles and expand serverless
      #functions
      - aws cloudformation create-stack --stack-name dev-sneakpeek-backend
       --template-body file://templates/backend.yml
       --parameters   file://util/dev_config_backend.json
       --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND


      #Waits until the stack has been successfully created
      - aws cloudformation wait stack-create-complete
        --stack-name dev-sneakpeek-webpage



      #allows us to execute shell script and then runs it
      - chmod +x lambda/create_deployment_package.sh
      - ./lambda/create_deployment_package.sh

      #populates the ./static/js/cognito_config.json
      - python builds/py/dev_stack_output.py


      #copies static files to newly created S3 resources
      - aws s3 cp ./static s3://dev-sneakpeek --recursive

      ############################################
      #after the shell script is finished running it
      #uploads the lambda deployment package to its
      #runtime s3 bucket
      ############################################
      - aws s3 cp ./ride.zip s3://cf-to-backend/ride.zip


      #waiting for backend function
      - python tests/cf_waiter.py dev-sneakpeek-backend

      #Waits until the stack has been successfully created
    #   - aws cloudformation wait stack-create-complete
    #     --stack-name dev-sneakpeek-backend

        # #Gets the lambda function name as an output value
        #which will be used to update the lambda function code
      - LAMBDA_FUNCTION=$(aws cloudformation describe-stacks --query
        "Stacks[0].Outputs[?OutputKey=='LambdaFunctionName'].OutputValue"
        --stack-name dev-sneakpeek-backend --output text)

      - echo $LAMBDA_FUNCTION
      #uploads zip file of code to lambda
      - aws lambda update-function-code --function-name $LAMBDA_FUNCTION
        --s3-bucket cf-to-backend --s3-key ride.zip

      - echo Running unit tests in python...
      #runs tests on aws resources created in previous steps
      - python tests/test_dev_aws_resources.py

    finally:
      - echo cleaning up resources reguardless of test results
      #deleting bucket and stack after testing
      - aws s3 rm s3://dev-sneakpeek --recursive
      - aws cloudformation delete-stack
        --stack-name dev-sneakpeek-webpage

      - aws cloudformation delete-stack
        --stack-name dev-sneakpeek-backend


artifacts:
  files:
    - ./logs/*




# aws cloudformation describe-change-set --change-set-name \
# arn:aws:cloudformation:us-east-1:350255258796:changeSet/sneakpeak-changeset/e8577b66-49c2-4ebd-ad5e-fc9503b75793


#
#
