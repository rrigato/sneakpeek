############################
#Accomplishes the following build tasks
#
#1) Runs the cloudformation template to create the necessary resources
#2) Runs python coverage function to generate Auto HTML documentation
##) Runs unit tests of lambda functions, checks aws resources created
#
#
############################
version: 0.2

env:
  # variables:
  #   JAVA_HOME: "/usr/lib/jvm/java-8-openjdk-amd64"
  # parameter-store:
  #   LOGIN_PASSWORD: /CodeBuild/dockerLoginPassword

phases:
  install:
    runtime-versions:
      runtime: python: 3.7
    commands:
      - echo Entered the install phase...
      - pip list
      - pip install sphinx
      - pwd
    finally:
      - echo This always runs even if the update or install command fails
  # pre_build:
  #   commands:
  #     - echo Entered the pre_build phase...
  #     - docker login –u User –p $LOGIN_PASSWORD
  #   finally:
  #     - echo This always runs even if the login command fails
  build:
    commands:
      - echo Entered the build phase...
      - echo Build started on `date`
      - pip install coverage
    finally:
      - echo This always runs even if the install command fails
  # post_build:
  #   commands:
  #     - echo Entered the post_build phase...
  #     - echo Build completed on `date`
artifacts:
  files:
    - target/messageUtil-1.0.jar
  # discard-paths: yes
  # secondary-artifacts:
  #   artifact1:
  #     files:
  #       - target/messageUtil-1.0.jar
  #     discard-paths: yes
  #   artifact2:
  #     files:
  #       - target/messageUtil-1.0.jar
  #     discard-paths: yes


#Creates the cloudformation stack
# aws cloudformation create-stack --stack-name dev-sneekpeek \
# --template-body file://templates/static_webpage.yml \
# --parameters  file://util/dev_config.json \
# --capabilities CAPABILITY_NAMED_IAM
#
# #copies static files to newly created S3 resources
# aws s3 cp ./static s3://dev-sneekpeek --recursive
#
#
# #Gets stack output value
# aws cloudformation describe-stacks --query \
# 'Stacks[0].[Outputs[].[OutputKey,OutputValue]]|[]'  \
# --stack-name TrailerUtilizationWebApp
